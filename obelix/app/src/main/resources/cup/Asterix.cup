package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoAsterix;
import alex.UnidadLexica;
import errors.GestionErroresAsterix;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresAsterix errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresAsterix();
   AnalizadorLexicoAsterix alex = (AnalizadorLexicoAsterix)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal     INTIX, BOOLIX, ENUMIX, FLOATIX, POT, VECTIX, DATIX, PUNTOCOMA, COMA,
             INTEGER, FLOATING, GALO, ROMANO, MENOR, MAYOR, CORA, CORC, PAA, PAC,
             LLA, LLC, MAS, MENOS, MUL, DIV, IGUAL, OR, AND, DIS, ASIG, 
             MEIGUAL, MAIGUAL, MOD, POW, NOT, REF, PUNT, IF, ELSE, WHILIX, PUNTO,
             FORIX, PANOR, POTION, DOSPUNTOS, FLECHA, RET, SKIP, TABEL, STIL, ID;

non terminal  S, I, DECVAR, VALOR, EXP0, EXP1, EXP2, EXP3, EXP4, EXP5, EXP6, EXP7, EXP8,
              LISTA, LISTAINT, ALIAS, TIPO, STRUCT, STRUCTINT, PROGRAMA, CUERPO,
              SUBPROGRAMAS, MAIN, DEF, SUBPROGRAMA, LARGP, ARG, CALLF, LARGC, IFELSE,
              WHILE, FOR, TAB, STILUS, VALREF, ACCESO;

PROGRAMA ::= DEF CUERPO | CUERPO;
CUERPO ::= MAIN | MAIN SUBPROGRAMAS;
SUBPROGRAMAS ::= SUBPROGRAMA | SUBPROGRAMA SUBPROGRAMAS;
MAIN ::= POTION PANOR PAA PAC FLECHA INTIX LLA S RET EXP0 PUNTOCOMA LLC;
DEF ::= DECVAR PUNTOCOMA | DECVAR PUNTOCOMA DEF;
DECVAR ::= TIPO ID ASIG VALOR | TIPO ID | STRUCT | ALIAS;
S ::= I PUNTOCOMA S  | I PUNTOCOMA;
I  ::=  DECVAR | ALIAS | FOR | WHILE | IFELSE | STILUS | TAB | SKIP;
VALOR ::= EXP0 | LISTA ;
LISTA ::= LLA LLC | LLA LISTAINT LLC;
LISTAINT ::= VALOR | VALOR COMA LISTAINT ;
ALIAS ::= DATIX ID TIPO | DATIX ID STRUCT;
TIPO ::= INTIX | BOOLIX | ENUMIX | FLOATIX | VECTIX MENOR TIPO MAYOR CORA INTEGER CORC; 
STRUCT ::= POT ID CORA STRUCTINT CORC;
STRUCTINT ::= DECVAR PUNTOCOMA STRUCTINT | DECVAR;
SUBPROGRAMA ::= POTION ID LARGP LLA I LLC | POTION ID LARGP FLECHA TIPO LLA S PUNTOCOMA RET EXP0 PUNTOCOMA LLC;
LARGP ::= PAA PAC | PAA ARG PAC;
ARG ::= ID DOSPUNTOS VALREF COMA ARG | ID DOSPUNTOS VALREF;
VALREF ::= TIPO | REF TIPO;
CALLF ::= ID PAA PAC | ID PAA LARGC PAC;
LARGC ::= EXP0 COMA LARGC | EXP0;
IFELSE ::= IF PAA EXP0 PAC LLA I LLC | IF PAA EXP0 PAC LLA I LLC ELSE LLA I LLC;
WHILE ::= WHILIX PAA EXP0 PAC LLA I LLC;
FOR ::= FORIX PAA INTIX ID ASIG EXP0  PUNTOCOMA EXP0 PUNTOCOMA ID ASIG EXP0 PAC LLA I LLC |
          FORIX PAA TIPO ID DOSPUNTOS VECTIX MENOR TIPO MAYOR PAC LLA I LLC;
TAB ::= TABEL PAA EXP0 PAC;
STILUS ::= STIL PAA EXP0 PAC;

EXP0 ::= EXP1 OR EXP0 | EXP1;
EXP1 ::= EXP2 AND EXP1 | EXP2;
EXP2 ::= EXP3 IGUAL EXP2 | EXP3 DIS EXP2 | EXP3;
EXP3 ::= EXP4 MEIGUAL EXP3 | EXP4 MAIGUAL EXP3 | EXP4 MENOR EXP3 | EXP4 MAYOR EXP3 | EXP4;
EXP4 ::= EXP4 MAS EXP5 | EXP4 MENOS EXP5 | EXP5;
EXP5 ::= EXP5 MUL EXP6 | EXP5 DIV EXP6 | EXP5 MOD EXP6 | EXP6;
EXP6 ::= NOT EXP7 | MENOS EXP6 | EXP7 POW EXP6 | EXP7;
EXP7 ::= EXP7 PUNTO EXP8 | EXP7 CORA EXP8 CORC | EXP8;
EXP8 ::= ID | INTEGER | FLOATING | GALO | ROMANO | CALLF | ACCESO | PAA EXP0 PAC;

ACCESO ::= EXP0 CORA EXP0 CORC | EXP0 PUNT ID;
